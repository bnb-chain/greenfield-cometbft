// Code generated by mockery. DO NOT EDIT.

package proxy

import (
	abcicli "github.com/cometbft/cometbft/abci/client"
	mock "github.com/stretchr/testify/mock"
)

// MockClientCreator is an autogenerated mock type for the ClientCreator type
type MockClientCreator struct {
	mock.Mock
}

type MockClientCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClientCreator) EXPECT() *MockClientCreator_Expecter {
	return &MockClientCreator_Expecter{mock: &_m.Mock}
}

// NewABCIClient provides a mock function with no fields
func (_m *MockClientCreator) NewABCIClient() (abcicli.Client, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NewABCIClient")
	}

	var r0 abcicli.Client
	var r1 error
	if rf, ok := ret.Get(0).(func() (abcicli.Client, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() abcicli.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(abcicli.Client)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientCreator_NewABCIClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewABCIClient'
type MockClientCreator_NewABCIClient_Call struct {
	*mock.Call
}

// NewABCIClient is a helper method to define mock.On call
func (_e *MockClientCreator_Expecter) NewABCIClient() *MockClientCreator_NewABCIClient_Call {
	return &MockClientCreator_NewABCIClient_Call{Call: _e.mock.On("NewABCIClient")}
}

func (_c *MockClientCreator_NewABCIClient_Call) Run(run func()) *MockClientCreator_NewABCIClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientCreator_NewABCIClient_Call) Return(_a0 abcicli.Client, _a1 error) *MockClientCreator_NewABCIClient_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientCreator_NewABCIClient_Call) RunAndReturn(run func() (abcicli.Client, error)) *MockClientCreator_NewABCIClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClientCreator creates a new instance of MockClientCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClientCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClientCreator {
	mock := &MockClientCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
