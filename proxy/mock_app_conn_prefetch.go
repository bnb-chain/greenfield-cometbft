// Code generated by mockery. DO NOT EDIT.

package proxy

import (
	types "github.com/cometbft/cometbft/abci/types"
	mock "github.com/stretchr/testify/mock"
)

// MockAppConnPrefetch is an autogenerated mock type for the AppConnPrefetch type
type MockAppConnPrefetch struct {
	mock.Mock
}

type MockAppConnPrefetch_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAppConnPrefetch) EXPECT() *MockAppConnPrefetch_Expecter {
	return &MockAppConnPrefetch_Expecter{mock: &_m.Mock}
}

// PreBeginBlockSync provides a mock function with given fields: _a0
func (_m *MockAppConnPrefetch) PreBeginBlockSync(_a0 types.RequestPreBeginBlock) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for PreBeginBlockSync")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(types.RequestPreBeginBlock) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAppConnPrefetch_PreBeginBlockSync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PreBeginBlockSync'
type MockAppConnPrefetch_PreBeginBlockSync_Call struct {
	*mock.Call
}

// PreBeginBlockSync is a helper method to define mock.On call
//   - _a0 types.RequestPreBeginBlock
func (_e *MockAppConnPrefetch_Expecter) PreBeginBlockSync(_a0 interface{}) *MockAppConnPrefetch_PreBeginBlockSync_Call {
	return &MockAppConnPrefetch_PreBeginBlockSync_Call{Call: _e.mock.On("PreBeginBlockSync", _a0)}
}

func (_c *MockAppConnPrefetch_PreBeginBlockSync_Call) Run(run func(_a0 types.RequestPreBeginBlock)) *MockAppConnPrefetch_PreBeginBlockSync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.RequestPreBeginBlock))
	})
	return _c
}

func (_c *MockAppConnPrefetch_PreBeginBlockSync_Call) Return(_a0 error) *MockAppConnPrefetch_PreBeginBlockSync_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAppConnPrefetch_PreBeginBlockSync_Call) RunAndReturn(run func(types.RequestPreBeginBlock) error) *MockAppConnPrefetch_PreBeginBlockSync_Call {
	_c.Call.Return(run)
	return _c
}

// PreCommitSync provides a mock function with given fields: _a0
func (_m *MockAppConnPrefetch) PreCommitSync(_a0 types.RequestPreCommit) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for PreCommitSync")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(types.RequestPreCommit) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAppConnPrefetch_PreCommitSync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PreCommitSync'
type MockAppConnPrefetch_PreCommitSync_Call struct {
	*mock.Call
}

// PreCommitSync is a helper method to define mock.On call
//   - _a0 types.RequestPreCommit
func (_e *MockAppConnPrefetch_Expecter) PreCommitSync(_a0 interface{}) *MockAppConnPrefetch_PreCommitSync_Call {
	return &MockAppConnPrefetch_PreCommitSync_Call{Call: _e.mock.On("PreCommitSync", _a0)}
}

func (_c *MockAppConnPrefetch_PreCommitSync_Call) Run(run func(_a0 types.RequestPreCommit)) *MockAppConnPrefetch_PreCommitSync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.RequestPreCommit))
	})
	return _c
}

func (_c *MockAppConnPrefetch_PreCommitSync_Call) Return(_a0 error) *MockAppConnPrefetch_PreCommitSync_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAppConnPrefetch_PreCommitSync_Call) RunAndReturn(run func(types.RequestPreCommit) error) *MockAppConnPrefetch_PreCommitSync_Call {
	_c.Call.Return(run)
	return _c
}

// PreDeliverTxAsync provides a mock function with given fields: _a0
func (_m *MockAppConnPrefetch) PreDeliverTxAsync(_a0 types.RequestPreDeliverTx) {
	_m.Called(_a0)
}

// MockAppConnPrefetch_PreDeliverTxAsync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PreDeliverTxAsync'
type MockAppConnPrefetch_PreDeliverTxAsync_Call struct {
	*mock.Call
}

// PreDeliverTxAsync is a helper method to define mock.On call
//   - _a0 types.RequestPreDeliverTx
func (_e *MockAppConnPrefetch_Expecter) PreDeliverTxAsync(_a0 interface{}) *MockAppConnPrefetch_PreDeliverTxAsync_Call {
	return &MockAppConnPrefetch_PreDeliverTxAsync_Call{Call: _e.mock.On("PreDeliverTxAsync", _a0)}
}

func (_c *MockAppConnPrefetch_PreDeliverTxAsync_Call) Run(run func(_a0 types.RequestPreDeliverTx)) *MockAppConnPrefetch_PreDeliverTxAsync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.RequestPreDeliverTx))
	})
	return _c
}

func (_c *MockAppConnPrefetch_PreDeliverTxAsync_Call) Return() *MockAppConnPrefetch_PreDeliverTxAsync_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAppConnPrefetch_PreDeliverTxAsync_Call) RunAndReturn(run func(types.RequestPreDeliverTx)) *MockAppConnPrefetch_PreDeliverTxAsync_Call {
	_c.Run(run)
	return _c
}

// NewMockAppConnPrefetch creates a new instance of MockAppConnPrefetch. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAppConnPrefetch(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAppConnPrefetch {
	mock := &MockAppConnPrefetch{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
